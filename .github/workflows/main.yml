name: Continuous Integration and Delivery

on: [push]

jobs:

  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Add .local/bin to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Set up .env_local
        run: echo "SECRET_KEY=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" > .env_local

      - name: Docker meta (static)
        id: docker_meta_static
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/exegeteapp/exegete-static

      - name: Docker meta (backend)
        id: docker_meta_backend
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/exegeteapp/exegete-backend

      - name: Set up SSH
        run: 'mkdir -p /home/runner/.ssh && echo "$SSH_KEY" > /home/runner/.ssh/id_rsa && chmod 600 /home/runner/.ssh/id_rsa'
        shell: bash
        env:
          SSH_KEY: ${{secrets.SSH_KEY}}

      - name: Upgrade pip (python)
        run: |
          pip3 install -U pip setuptools

      - name: Install poetry (python)
        run: |
          pip3 install -U poetry

      - name: Lint (Python)
        run: |
          cd backend
          poetry install
          poetry run black --check exegete

      - name: Install (Typescript)
        working-directory: frontend
        run: |
          yarn install

      - name: Tests (Typescript)
        working-directory: frontend
        run: |
          yarn test

      - name: Build static assets (frontend)
        run: |
          bash ./collectstatic.sh

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Push to GitHub Container Registry (backend)
        uses: docker/build-push-action@v2
        with:
          context: backend/
          file: ./backend/Dockerfile
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta_backend.outputs.tags }}
          labels: ${{ steps.docker_meta_backend.outputs.labels }}

      - name: Push to GitHub Container Registry (static)
        uses: docker/build-push-action@v2
        with:
          context: static/
          file: ./static/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta_static.outputs.tags }}
          labels: ${{ steps.docker_meta_static.outputs.labels }}

      - name: Trigger deployment
        run: ssh -o StrictHostKeyChecking=no -p 6237 ci@retro.grahame.dev
        shell: bash
        if: github.ref == 'refs/heads/main'
